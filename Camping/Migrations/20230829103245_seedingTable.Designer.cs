// <auto-generated />
using Camping.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Camping.Migrations
{
    [DbContext(typeof(EcommerceDb))]
    [Migration("20230829103245_seedingTable")]
    partial class seedingTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Camping.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "contains all the tables and chairs you need for camping ",
                            Name = "tables & Chairs"
                        },
                        new
                        {
                            Id = 2,
                            Description = "contains all the types of tents ",
                            Name = "tents"
                        },
                        new
                        {
                            Id = 3,
                            Description = "contains all the types of  Accessories",
                            Name = "Accessories"
                        });
                });

            modelBuilder.Entity("Camping.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 1,
                            Manufacturer = "Ikea",
                            Name = "wooden table",
                            Spec = "size: 2*3*1.5 m, color:black , matireal= wood"
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 1,
                            Manufacturer = "Ikea",
                            Name = "steel table",
                            Spec = "size: 2*3*1.5 m, color:silver , matireal= steel"
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 2,
                            Manufacturer = "renvate",
                            Name = "Armor tent ",
                            Spec = "size: 1.5*2*3 m, color:black , matireal= wool"
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 2,
                            Manufacturer = "renvate",
                            Name = "small tent ",
                            Spec = "size: 2*2*2 m, color:red , matireal= wool"
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 3,
                            Manufacturer = "nike",
                            Name = "water bottle",
                            Spec = "size: medeum, color:black , matireal= plastic"
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 3,
                            Manufacturer = "nike",
                            Name = "climing wear ",
                            Spec = "size: xl, color:red , matireal= cotten"
                        });
                });

            modelBuilder.Entity("Camping.Models.Product", b =>
                {
                    b.HasOne("Camping.Models.Category", "Categories")
                        .WithMany("products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Camping.Models.Category", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
